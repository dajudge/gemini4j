def dockerRegistryUrl() {
    env.DOCKER_REGISTRY
}

def getImageName() {
    "${dockerRegistryUrl()}/gemini4j/website:latest"
}

node {
    stage ("Checkout") {
        checkout scm
    }
    
    stage ("Build docker image") {
        dir ("site") {
            def imageName = getImageName()
            println "Building $imageName..."
            docker.withRegistry("https://${dockerRegistryUrl()}", 'local_docker_registry') {
                def image = docker.build(imageName)
                image.push()
            }
        }
    }
    stage ("Deploy to k8s") {
        dir ("site") {
            sh "tippel app.yml | kubectl apply -f -"
            sh "kubectl delete secret docker-registry -n gemini4j --ignore-not-found"
            withCredentials([usernamePassword(credentialsId: 'local_docker_registry', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                sh "kubectl create secret docker-registry docker-registry --namespace gemini4j --docker-server=${DOCKER_REGISTRY} --docker-username=${DOCKER_USERNAME} --docker-password=${DOCKER_PASSWORD} --docker-email=dajudge.as@gmail.com"
            }
        }
    }
}
